buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.5.0'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath 'me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2'
    }
    // solves retrolambda lint problem. See https://github.com/evant/android-retrolambda-lombok
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}
apply plugin: 'com.android.application'
apply plugin: 'android-apt' // annotation processor
apply plugin: 'me.tatarka.retrolambda'

apt { // Passing parameters to the annotation processor (for androidannotations)
    arguments {
        androidManifestFile variant.outputs[0]?.processResources?.manifestFile
        resourcePackageName android.defaultConfig.applicationId
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion '23.0.2'
    useLibrary 'org.apache.http.legacy' // Issue with robolectric requires this. See https://github.com/robolectric/robolectric/issues/1862
    defaultConfig {
        minSdkVersion 15
        //todo test on emulator api 23
        targetSdkVersion 23
        versionCode buildVersionCode()
        versionName version
        applicationId group
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    testOptions {
        unitTests.all {
            systemProperty 'robolectric.logging.enabled', 'true'
            systemProperty 'robolectric.logging', 'stdout'
        }
    }

    buildTypes {
        debug {
            resValue 'string', 'app_name', 'xteam.demo.develop'
            applicationIdSuffix '.develop'
        }
        release {
            resValue 'string', 'app_name', 'xteam.demo'
            minifyEnabled true
            proguardFiles 'config/proguard/proguard-project.txt'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    output.outputFile.name.replace(".apk", "-${variant.versionName}.apk"))
        }
    }

    lintOptions {
        lintConfig file('config/lint/lint.xml')
        abortOnError true
        checkAllWarnings true
        ignoreWarnings false
        checkReleaseBuilds true
        warningsAsErrors true
        disable 'GoogleAppIndexingWarning', 'GradleDependency', 'AllowBackup'
        htmlReport true
        xmlReport true
    }

    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dexOptions {
        preDexLibraries true
    }
    //todo    signingConfigs

}

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
    incremental true
}

dependencies {
    def supportLibrariesVersion = '23.0.1'
    compile "com.android.support:design:$supportLibrariesVersion"
    compile "com.android.support:appcompat-v7:$supportLibrariesVersion"
    compile "com.android.support:support-annotations:$supportLibrariesVersion"
    compile "com.android.support:recyclerview-v7:$supportLibrariesVersion"
    compile "com.android.support:cardview-v7:$supportLibrariesVersion"

    def androidAnnotationsVersion = '3.3.2'
    apt "org.androidannotations:androidannotations:$androidAnnotationsVersion"
    compile "org.androidannotations:androidannotations-api:$androidAnnotationsVersion"

    compile 'io.reactivex:rxandroid:1.1.0'
    // Because RxAndroid releases are few and far between, it is recommended you also explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex:rxjava:1.1.0'

    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.0.0-beta4'

    compile 'com.google.code.gson:gson:2.5'

//    todo am I gonna use dagger afterall?
    compile 'com.squareup.dagger:dagger:1.2.2'
    apt 'com.squareup.dagger:dagger-compiler:1.2.2'

    compile 'com.google.code.findbugs:annotations:2.0.1'

    // Unit tests.
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    testCompile 'org.robolectric:robolectric:3.0'

    // Espresso tests.
    def espressoVersion = '2.2.1'
    androidTestCompile "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espressoVersion"
}
